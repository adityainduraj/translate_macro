Function URLEncode(ByVal Text As String) As String

    Dim i As Long

    Dim CharCode As Integer

    Dim OutStr As String

 

    OutStr = ""

    For i = 1 To Len(Text)

        CharCode = Asc(Mid$(Text, i, 1))

        Select Case CharCode

            Case 48 To 57, 65 To 90, 97 To 122

                OutStr = OutStr & Mid$(Text, i, 1)

            Case 32

                OutStr = OutStr & "+"

            Case Else

                OutStr = OutStr & "%" & Hex(CharCode)

        End Select

    Next i

 

    URLEncode = OutStr

End Function

 

Function TranslateText(ByVal text_str As String, ByVal src_lang As String, ByVal trgt_lang As String) As String

    Dim s1 As Long, s2 As Long

    Dim url_str As String, rsp As String

    Dim xmlhttp As Object

    Const rslt_div As String = "<div class=""result-container"">"

    Const url_temp_src As String = https://translate.google.com/m?hl=[from]&sl=[from]&tl=[to]&ie=UTF-8&prev=_m&q=

   

    ' Build the URL

    url_str = Replace(Replace(url_temp_src, "[from]", src_lang), "[to]", trgt_lang) & URLEncode(text_str)

   

    ' Create the XMLHTTP object

    Set xmlhttp = CreateObject("MSXML2.XMLHTTP.6.0")

   

    ' Make the web request

    On Error Resume Next

    xmlhttp.Open "GET", url_str, False

    xmlhttp.send

    rsp = xmlhttp.responseText

    On Error GoTo 0

   

    ' Handle errors

    If xmlhttp.Status <> 200 Then

        TranslateText = "#ERROR!"

        Exit Function

    End If

   

    ' Find and extract the translation

    s1 = InStr(rsp, rslt_div)

    If s1 Then

        s1 = s1 + Len(rslt_div)

        s2 = InStr(s1, rsp, "</div>")

        If s2 Then

            TranslateText = Mid$(rsp, s1, s2 - s1)

        Else

            TranslateText = "#PARSE_ERROR!"

        End If

    Else

        TranslateText = "#NO_TRANSLATION!"

    End If

End Function

 

Sub TranslateCells()

    Dim baseLang As String

    Dim cell As Range

    Dim ws As Worksheet

 

    ' Ask user for the base language

    baseLang = InputBox("Enter the base language code (e.g., 'es' for Spanish):", "Base Language")

 

    ' Check if the user has entered a value

    If baseLang = "" Then

        MsgBox "You must enter a base language code.", vbExclamation

        Exit Sub

    End If

 

    ' Check if the selected cell is empty

    If IsEmpty(Selection.Value) Then

        MsgBox "Selected cell is empty. Please select a cell with text to translate.", vbExclamation

        Exit Sub

    End If

 

    ' Translate only if source language is different from target language

    If UCase(baseLang) <> "EN" Then

        ' Translate the selected cell

        Set ws = ActiveSheet

        Selection.Offset(0, 1).Value = TranslateText(Selection.Value, baseLang, "en")

    Else

        MsgBox "Source language is the same as target language. No translation needed.", vbInformation

    End If

End Sub

 

Sub MoveContentsDown()

    Dim ws As Worksheet

    Dim srcRange As Range

    Dim destRange As Range

    Dim cell As Range

    Dim numRows As Long

    Dim i As Long

   

    Set ws = ActiveSheet

    numRows = 4 ' Number of rows to move down

   

    ' Define source range and destination range

   Set srcRange = ws.Range("A1").Resize(ws.Cells.SpecialCells(xlCellTypeLastCell).Row, ws.Cells.SpecialCells(xlCellTypeLastCell).Column)

    Set destRange = ws.Range("A" & numRows + 1).Resize(srcRange.Rows.Count, srcRange.Columns.Count)

   

    ' Move contents row by row

    For i = srcRange.Rows.Count To 1 Step -1

        For Each cell In ws.Range("A" & i).Resize(1, srcRange.Columns.Count).Cells

            cell.Copy

            ws.Cells(cell.Row + numRows, cell.Column).PasteSpecial Paste:=xlPasteValues

            Application.CutCopyMode = False

        Next cell

    Next i

   

    ' Clear original top rows

    ws.Rows("1:" & numRows).ClearContents

End Sub

 

Sub AddTranslateButton()

    Dim btn As Button

    Dim ws As Worksheet

    Dim leftPosition As Double

    Dim topPosition As Double

    Dim buttonWidth As Double

    Dim buttonHeight As Double

 

    ' Set the worksheet

    Set ws = ActiveSheet

 

    ' Set the position and size of the button

    buttonWidth = 100     ' Adjust the button width as needed

    buttonHeight = 30     ' Adjust the button height as needed

    leftPosition = 10     ' Adjust the left position as needed

    topPosition = 5       ' Adjust the top position as needed

 

    ' Create the button

    Set btn = ws.Buttons.Add(leftPosition, topPosition, buttonWidth, buttonHeight)

    With btn

        .Caption = "Translate"

        .OnAction = "TranslateCells"

    End With

End Sub

 

Sub SetupTranslation()

    ' Call the subroutine to move contents down

    Call MoveContentsDown

   

    ' Call the subroutine to add the Translate button

    Call AddTranslateButton

End Sub
